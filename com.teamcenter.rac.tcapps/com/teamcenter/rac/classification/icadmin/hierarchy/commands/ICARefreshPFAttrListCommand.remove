/*==============================================================================

                   Copyright (c) 1999,2000 Unigraphics Solutions
                       Unpublished - All rights reserved
================================================================================
File description:

        Filename:
        Module  :

================================================================================
   Date      Name                    Description of Change
18-Aug-2003  Helmut Lohmueller       created
18-Aug-2003  Helmut Lohmueller       merge from Helmut
30-Oct-2003  braun                   Change exceptionThrown to show correct error message.
05-Feb-2006  Venkatesh Chitnis       de-imanization
$HISTORY$
================================================================================*/
package com.teamcenter.rac.classification.icadmin.hierarchy.commands;

import com.teamcenter.rac.aif.*;
import com.teamcenter.rac.util.*;
import com.teamcenter.rac.util.log.*;
import com.teamcenter.rac.kernel.TCException;
import com.teamcenter.rac.classification.common.*;
import com.teamcenter.rac.classification.ics.*;
import com.teamcenter.rac.classification.icadmin.hierarchy.*;

import java.util.*;

/**
 * ICARefreshPFAttrListCommand.java
 *
 *
 * Created: Mon Aug 18 11:28:52 2003
 *
 * @author <a href="mailto:helmutl@DECGN168">Helmut Lohmueller</a>
 * @version 1.0
 */
public class ICARefreshPFAttrListCommand extends AbstractAIFCommand implements InterfaceAIFOperationExecutionListener
{
    private ICAHierarchyContext   m_context;
    private ICSPFClassAttrMapping m_mapping;
    private ICAAttrMappingPanel.ICAPFAttrList         m_attrList;

    private boolean m_operationFailed;

    //============================================================================

    public ICARefreshPFAttrListCommand( ICAHierarchyContext               theContext,
                                        ICSPFClassAttrMapping             theMapping,
                                        ICAAttrMappingPanel.ICAPFAttrList theAttrList )
    {
        m_context = theContext;
        m_mapping = theMapping;
        m_attrList = theAttrList;
    }

    //============================================================================

    public void executeCommand()
    {
        ICARefreshPFAttrListOperation op = new ICARefreshPFAttrListOperation();

        op.addOperationListener ( this );

        m_context.getAdminContext().getSession().queueOperation ( op );
    }


    //==============================================================================
    /*  startOperation() is the implementation for InterfaceAIFOperationExecutionListener
    **
    */
    public void startOperation (String message)
    {
        m_context.getAdminContext().setBusy( "Load Part Family Attributes..." );
        m_operationFailed = false;

    }

    //==============================================================================
    /*  endOperation() is the implementation for InterfaceAIFOperationExecutionListener
    **  NOTE: it will be called regardless if exceptionThrown() is called
    **        therefore m_operationFailed is used to determine if the operation has failed.
    */
    public void endOperation ()
    {
        if( !m_operationFailed )
        {
            //MessageBox.post( "Part Family Attributes successfully loaded", "Load PF Attributes", MessageBox.INFORMATION );
            m_context.getAdminContext().setIdle( "Load Part Family Attributes done!" );

            try
            {
                Enumeration enum = m_mapping.getPFAttrList( false );
                m_attrList.setAllValues( enum );
            }
            catch ( TCException iex )
            {

            } // end of catch

        }
    }

    //==============================================================================
    /*  exceptionThrown() is the implementation for InterfaceAIFOperationExecutionListener
    **
    */
    public void exceptionThrown(Exception ex)
    {
        m_operationFailed = true;
        MessageBox.post( "Loading PF Attributes failed", ex, "Load PF Attributes", MessageBox.ERROR );
        m_context.getAdminContext().setIdle( "Load Part Family Attributes failed!" );
    }

    //==============================================================================
    //
    //
    //
    //==============================================================================

    private class ICARefreshPFAttrListOperation extends AbstractAIFOperation
    {

        //==========================================================================

        public ICARefreshPFAttrListOperation()
        {
        }

        //==========================================================================

        public void executeOperation() throws Exception
        {
            System.out.println( "G4MCreatePFMemberOperation:   executeOperation" );

            m_mapping.getPFAttrList( true );
        }

    }
}
